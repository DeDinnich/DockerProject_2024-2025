services:
  mysql:
    image: mysql:latest
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - '3306:3306'
    volumes:
      - db_data:/var/lib/mysql

  nginx1:
    image: nginx:latest
    container_name: nginx1
    ports:
      - '8081:80'
    volumes:
      - ./site1/TP-Final-3IW-ESGI:/var/www/html
      - ./confs/nginx1.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php1

  nginx2:
    image: nginx:latest
    container_name: nginx2
    ports:
      - '8082:80'
    volumes:
      - ./site2/TP-Final-3IW-ESGI:/var/www/html
      - ./confs/nginx2.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php2

  php1:
    build:
      context: ./dockerfiles
      dockerfile: Dockerfile
    container_name: php1
    volumes:
      - ./site1/TP-Final-3IW-ESGI:/var/www/html
    working_dir: /var/www/html
    environment:
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      - mysql
    command: sh -c "composer update && composer install && npm install && npm run build && php artisan key:generate && php artisan migrate:fresh --seed && php-fpm"

  php2:
    build:
      context: ./dockerfiles
      dockerfile: Dockerfile
    container_name: php2
    volumes:
      - ./site2/TP-Final-3IW-ESGI:/var/www/html
    working_dir: /var/www/html
    environment:
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      - mysql
    command: sh -c "composer update && composer install && npm install && npm run build && php artisan key:generate && php artisan migrate:fresh --seed && php-fpm"

volumes:
  db_data: